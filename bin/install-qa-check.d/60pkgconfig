# Check for pkg-config file issues

pkgconfig_check() {
	local files=()
	# Make a list of .pc files and bail out if there aren't any
	mapfile -d '' files < <(
		find "${ED}"/usr/{lib*,share}/pkgconfig -maxdepth 1 -type f -name '*.pc' -print0 2>/dev/null
	)
	[[ -z "${files[@]}" ]] && return

	local f

	# Look for leaking LDFLAGS into pkg-config files
	f=$(egrep -zsH '^Libs.*-Wl,(-O[012]|--hash-style)' "${files[@]}")
	if [[ -n ${f} ]] ; then
		eqawarn "QA Notice: pkg-config files with wrong LDFLAGS detected:"
		eqawarn "${f//${D}}"
	fi

	# Validate using pkgconfig
	# Some less common implementations may not support this?
	# seems like f.d.o, OpenBSD, and of course pkgconf do though.
	# Need --maximum-traverse-depth=1 to avoid checking deps and giving
	# unrelated warnings/errors.
	if ! pkg-config --maximum-traverse-depth=1 --validate "${files[@]}" ; then
		eqawarn "QA Notice: pkg-config files which fail validation found!"
		eqawarn "Run 'pkg-config --validate ...' for more information"
	fi
}

pkgconfig_check
: # guarantee successful exit

# vim:ft=sh
