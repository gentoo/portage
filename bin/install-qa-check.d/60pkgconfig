# Check for pkg-config file issues

pkgconfig_check() {
	local files=()
	# Make a list of .pc files and bail out if there aren't any
	mapfile -d '' files < <(
		find "${ED}"/usr/{lib*,share}/pkgconfig -maxdepth 1 -type f -name '*.pc' -print0 2>/dev/null
	)
	[[ -z "${files[@]}" ]] && return

	local f

	# Look for leaking LDFLAGS into pkg-config files
	f=$(egrep -zsH '^Libs.*-Wl,(-O[012]|--hash-style)' "${files[@]}")
	if [[ -n ${f} ]] ; then
		eqawarn "QA Notice: pkg-config files with wrong LDFLAGS detected:"
		eqatag -v pkgconfig.bad-ldlags "${f//${D}}"
	fi

	# Validate using pkgconfig
	# Some less common implementations may not support this?
	# seems like f.d.o, OpenBSD, and of course pkgconf do though.
	# Need --maximum-traverse-depth=1 to avoid checking deps and giving
	# unrelated warnings/errors.
	if ! pkg-config --maximum-traverse-depth=1 --validate "${files[@]}" ; then
		eqawarn "QA Notice: pkg-config files which fail validation found!"
		eqawarn "Run 'pkg-config --validate ...' for more information"
	fi

	# Check for unexpected paths
	# e.g. https://gitweb.gentoo.org/repo/gentoo.git/commit/?id=c90ab38e3577aae61fac2341b34ad593948de1cd
	if [[ -n ${EPREFIX} ]] ; then
		for f in "${files[@]}" ; do
			local key
			for key in prefix exec_prefix libdir includedir ; do
				local value=$(pkg-config --variable="${key}" "${f}")

				if [[ ${value} != "${EPREFIX}"* ]] ; then
					eqawarn "QA Notice: pkg-config files not respecting EPREFIX found"
					eqawarn "${f}'s key=${key} does not respect EPREFIX:"
					eqawarn "${key}=${value}"
					eqatag -v pkgconfig.bad-paths "${f}"
				fi
			done
		done
	fi

	# TODO: Generalise for non-lib64 libdir? Not that this is very common now
	# that riscv chose a more standard layout.
	#
	# If we're installing to ${ED}/usr/lib/pkgconfig, let's make sure
	# we're not referencing lib64.
	#
	# e.g. https://bugs.gentoo.org/729642
	local bad_libdir=()
	for f in "${files[@]}" ; do
		# In ${ED}/usr/lib, we shouldn't reference lib64
		if [[ ${f} == *lib/pkgconfig* ]] ; then
			if [[ -d "${ED}"/usr/lib && -L "${ED}"/usr/lib ]] ; then
				# (Don't bother if /usr/lib is a symlink to /usr/lib64)
				continue
			fi

			if egrep -q "/lib64" ${f} ; then
				bad_libdir+=( ${f} )
			fi
		elif [[ ${f} == *lib64/pkgconfig* ]] ; then
			# We want to match /lib/, /lib/foo/, but not e.g. /lib64 or /lib64/, or libfoo
			if grep -qP '/lib\b' ${f} ; then
				bad_libdir+=( ${f} )
			fi
		fi
	done

	if [[ -n "${bad_libdir[@]}" ]] ; then
		eqawarn "QA Notice: pkg-config files not respecting libdir found"
		eqawarn "(contains reference to either lib or lib64 in wrong directory)"
		eqatag -v pkgconfig.bad-libdir "${bad_libdir[@]}"
	fi

}

pkgconfig_check
: # guarantee successful exit

# vim:ft=sh
